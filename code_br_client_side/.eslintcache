[{"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/index.js":"1","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/App.js":"2","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/reportWebVitals.js":"3","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/containers/Home.js":"4","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Activities.js":"5","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Tracker.js":"6","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inspire.js":"7","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/NavBar.js":"8","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Detail.js":"9","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/Mood.js":"10","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/Journal.js":"11","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/WaterIntake.js":"12","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/Screentime.js":"13","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Exercises/Meditate.js":"14","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Exercises/Yoga.js":"15","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Exercises/Breathe.js":"16","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/StartScreen.js":"17","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Loading.js":"18","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/Sleep.js":"19","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/DiaryForm.js":"20"},{"size":500,"mtime":1607786773017,"results":"21","hashOfConfig":"22"},{"size":97,"mtime":1608129195645,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1607786773017,"results":"24","hashOfConfig":"22"},{"size":3057,"mtime":1608159262605,"results":"25","hashOfConfig":"22"},{"size":949,"mtime":1608139711163,"results":"26","hashOfConfig":"22"},{"size":1106,"mtime":1608139711184,"results":"27","hashOfConfig":"22"},{"size":2896,"mtime":1608195494084,"results":"28","hashOfConfig":"22"},{"size":889,"mtime":1608139711176,"results":"29","hashOfConfig":"22"},{"size":837,"mtime":1608129195647,"results":"30","hashOfConfig":"22"},{"size":106,"mtime":1608129195650,"results":"31","hashOfConfig":"22"},{"size":437,"mtime":1608139711169,"results":"32","hashOfConfig":"22"},{"size":914,"mtime":1608129195651,"results":"33","hashOfConfig":"22"},{"size":809,"mtime":1608129195650,"results":"34","hashOfConfig":"22"},{"size":661,"mtime":1608139711167,"results":"35","hashOfConfig":"22"},{"size":955,"mtime":1608139711168,"results":"36","hashOfConfig":"22"},{"size":469,"mtime":1608139711166,"results":"37","hashOfConfig":"22"},{"size":1931,"mtime":1608163219764,"results":"38","hashOfConfig":"22"},{"size":103,"mtime":1608159262601,"results":"39","hashOfConfig":"22"},{"size":2951,"mtime":1608159917742,"results":"40","hashOfConfig":"22"},{"size":357,"mtime":1608159262598,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"yjb05r",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/index.js",[],["94","95"],"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/App.js",[],"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/reportWebVitals.js",[],"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/containers/Home.js",["96","97","98"],"import { React, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, RefreshRoute } from \"react-router-dom\";\nimport NavBar from '../components/NavBar';\nimport StartScreen from '../components/StartScreen'\n\nimport Journal from '../components/Inputs/Journal';\nimport Breathe from '../components/Exercises/Breathe';\nimport Activities from '../components/Activities';\nimport Mood from '../components/Inputs/Mood';\nimport Sleep from '../components/Inputs/Sleep';\nimport Tracker from '../components/Tracker';\nimport Meditate from '../components/Exercises/Meditate';\nimport Inspire from '../components/Inspire';\nimport Yoga from '../components/Exercises/Yoga';\nimport Detail from '../components/Detail'\nimport WaterIntake from '../components/Inputs/WaterIntake';\nimport Screentime from '../components/Inputs/Screentime';\nimport Loading from '../components/Loading';\nimport DiaryForm from \"../components/Inputs/DiaryForm\";\n\n\nconst Home = () => {\n\n\n  const [onWelcome, setOnWelcome] = useState(true);\n  const [diaryEntry, setDiaryEntry] = useState({});\n  const [selectedDiaryEntry, setselectedDiaryEntry] = useState(0)\n  // const [loaded, setLoaded] = useState(false)\n  const getData = () => {\n    fetch(\"http://localhost:8080/diaryentry\")\n      .then(response => response.json())\n      .then(results => setDiaryEntry(results))\n    // .then(() => setLoaded(true))\n    // console.log(diaryEntries);\n  };\n\nconst handleUpdate = (property, value) => {\n  const newDiaryEntry = [...diaryEntry]\n  newDiaryEntry[newDiaryEntry.length -1][property]=value\n  setDiaryEntry(newDiaryEntry)\n  console.log(\"updated\")\n}\n\n\n  useEffect(() => {\n    const loadTimer = setTimeout(() => {\n      setOnWelcome(false)\n    }, 1000)\n    getData();\n  }, [selectedDiaryEntry])\n\n\n  if(onWelcome){\n    return <Loading />\n  };\n\n  return (\n    <Router>\n      <>\n        <h1 class=\"heading\">code&lt;br&gt;</h1>\n\n        <Switch>\n         \n              <Route exact path=\"/\" render={(props)=> <StartScreen {...props} diaryEntry={diaryEntry} handleUpdate={handleUpdate}/>}/>\n              <Route path=\"/new\" component={DiaryForm}/>\n              <Route path=\"/journal\" component={Journal}/>\n              <Route path=\"/activities\" component={Activities}/>\n              {/* <Route path=\"/mystats\" component={Stats}/> */}\n              <Route path=\"/meditate\" component={Meditate}/>\n              <Route path=\"/yoga\" component={Yoga}/>\n              <Route path=\"/inspire\" component={Inspire}/>\n              <Route path=\"/breathe\" component={Breathe}/>\n              <Route path=\"/mood\" component={Mood}/>\n              <Route path=\"/sleep\" component={Sleep}/>\n              <Route path=\"/detail\"  render={(props)=> <Detail {...props} diaryEntry={diaryEntry}/>}/>\n              <Route path=\"/tracker\" component={Tracker}/>\n              <Route path=\"/waterintake\" component={WaterIntake}/>\n              <Route path=\"/screentime\" component={Screentime}/>\n              \n            </Switch>  \n          <NavBar />\n        </>\n      </Router>\n  );\n}\n\nexport default Home;","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Activities.js",["99","100","101","102"],"import { Link } from 'react-router-dom';\nimport React from 'react';\n\nimport Breathe from \"./Exercises/Breathe\";\nimport Meditate from \"./Exercises/Meditate\";\nimport Yoga from \"./Exercises/Yoga\";\nimport Inspire from \"./Inspire\";\n\nconst Activities = () => {\n    return (\n        <>\n            <h2>Activities</h2>\n            <div class=\"navbar\">\n\n                <Link to=\"/meditate\">\n                    <button class=\"navbuttons\" >\n                        Meditate\n         </button>\n                </Link>\n\n                <Link to=\"/breathe\">\n                    <button class=\"navbuttons\" >Breathe</button>\n                </Link>\n\n                <Link to=\"/yoga\">\n                    <button class=\"navbuttons\" >Yoga</button>\n                </Link>\n\n                <Link to=\"/inspire\">\n                    <button class=\"navbuttons\" >Inspire</button>\n                </Link>\n            </div>\n        </>\n    )\n}\n\nexport default Activities;","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Tracker.js",["103"],"import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { Chart } from \"react-google-charts\";\n\nconst Tracker = () => {\n\n    const data = [\n        [\"Date\", \"Litres\"],\n        [\"12-12-20\", 1.5],\n        [\"13-12-20\", 2],\n        [\"14-12-20\", 2.5],\n        [\"15-12-20\", 1.4],\n        [\"16-12-20\", 1.4],\n        [\"17-12-20\", 2.4],\n        [\"18-12-20\", 3.1]\n      ];\n    \n\n    const options = {\n        title: \"Water Intake\",\n        curveType: \"function\",\n        legend: { position: \"bottom\" },\n        lineWidth: 5,\n        series: {\n            0: {color: '#191170' }\n        },\n        backgroundColor: 'transparent',\n        fontName: 'Quicksand',\n        textStyle: { color: '#F191170', \n                   fontName: 'Quicksand', \n                   fontSize: '10' }\n\n      };\n    \n    return (\n        <>\n        <h2>Tracker</h2>\n      <div className=\"chart\">\n        <Chart\n          chartType=\"LineChart\"\n          width=\"100%\"\n          height=\"200px\"\n          data={data}\n          options={options}\n        />\n      </div>\n      </>\n    )\n  \n    \n    };\n\nexport default Tracker;","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inspire.js",["104"],"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/NavBar.js",["105"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { HomeOutline, BookOpenOutline, PresentationChartBarOutline, EmojiHappyOutline } from \"heroicons-react\";\nimport { Tooltip } from '@material-ui/core';\n\n\n\n\n\nconst NavBar = () => {\n    return (\n\n        <div class=\"navbar\">\n            {/* <Tooltip title=\"Home\" /> */}\n            <Link class=\"navbuttons\" to=\"/\"><abbr class=\"tooltip\" title=\"Home\"><HomeOutline /></abbr></Link>\n\n            <Link class=\"navbuttons\" to=\"/journal\"><abbr class=\"tooltip\" title=\"Journal\"><BookOpenOutline /></abbr></Link>\n            <Link class=\"navbuttons\" to=\"/activities\"><abbr class=\"tooltip\" title=\"Activities\"><EmojiHappyOutline /></abbr></Link>\n            <Link class=\"navbuttons\" to=\"/detail\"><abbr class=\"tooltip\" title=\"My Stats\"><PresentationChartBarOutline /></abbr></Link>\n\n        </div>\n\n\n    )\n}\n\nexport default NavBar;\n\n","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Detail.js",["106","107"],"import {useState, useEffect} from 'react';\n\nconst Detail = ({diaryEntry}) => {\n\n    // const [loaded, setLoaded] =useState(false);\n\n    // useEffect(()=> {\n    //     if (!diaryEntry){\n            \n    //     }\n\n    // });\n\n    return(\n        <>\n        <h2>Latest Stats</h2>\n            <h3>Date: {diaryEntry[diaryEntry.length -1].date}</h3>\n            <h3>Water Intake: {diaryEntry[diaryEntry.length -1].waterIntake.litres} litres</h3>\n            <h3>Sleep time: {diaryEntry[diaryEntry.length -1].sleep.hours} hours</h3>\n            <h3>Journal Entry: {diaryEntry[diaryEntry.length -1].journal.journal_entry}</h3>\n        </>\n    )\n};\n\nexport default Detail;\n\n// const MapFetchData = diaryEntries.map((diaryEntry) => {\n  //   return (\n  //     // <diaryEntry diaryEntry={diaryEntry} />\n  //     <p>{diaryEntry}</p>\n  //   )\n  // });","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/Mood.js",[],"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/Journal.js",[],"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/WaterIntake.js",[],"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/Screentime.js",[],"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Exercises/Meditate.js",["108","109"],"import React from 'react';\nimport ReactPlayer from 'react-player';\n\nconst Meditate = () => {\n    return (\n        <>\n            <h2>Meditate</h2>\n            <div class=\"soundcloudbar\">\n                <iframe width=\"25%\" height=\"20\" scrolling=\"no\" frameborder=\"no\" allow=\"auto_play\"\n                    src=\"https://w.soundcloud.com/player/?url=https://soundcloud.com/user-16685247/sets/codebreak-reiki-zen\" >\n                </iframe>\n            </div>\n            {/* <ReactPlayer \n            url=\"https://soundcloud.com/user-16685247/sets/codebreak-reiki-zen\" playing={true}>\n            </ReactPlayer> */}\n\n        </>\n    )\n};\n\nexport default Meditate;","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Exercises/Yoga.js",["110","111","112"],"import React from 'react';\n\nconst Yoga = () => {\n\n    return (\n\n        <>\n            <h2>Yoga</h2>\n            <div class=\"yogabox\">\n\n\n                <iframe class=\"video\" width=\"280\" height=\"157\" src=\"https://www.youtube.com/embed/nQFf38xeBww\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n\n                <iframe class=\"video\" width=\"280\" height=\"157\" src=\"https://www.youtube.com/embed/VaoV1PrYft4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n\n                <iframe class=\"video\" width=\"280\" height=\"157\" src=\"https://www.youtube.com/embed/GGJzZx4H2K4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n\n            </div>\n\n        </>\n    )\n};\n\nexport default Yoga;","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Exercises/Breathe.js",["113"],"const Breathe = () => {\n    return (\n        <>\n            <h2>Breathe</h2>\n            <div class=\"breathe-tool\">\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n                <div class=\"circle\"></div>\n            </div>\n            <h2 id=\"text\"></h2>\n      </>\n    )\n}\n\nexport default Breathe;\n\n","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/StartScreen.js",["114","115","116","117","118"],"import {Link} from 'react-router-dom'\nimport Loading from './Loading';\nimport {ThumbUpOutline} from 'heroicons-react';\nimport DiaryForm from '../components/Inputs/DiaryForm';\nimport axios from 'axios';\nimport { useState, useEffect} from 'react';\n\n\nconst StartScreen = ({diaryEntry, handleUpdate}) =>{\n\n\n    const [diaryCreated, setDiaryCreated] = useState(false)\n\n    const dateObj = new Date();\n    const month = dateObj.getMonth()+1;\n    const day = String(dateObj.getDate()).padStart(2, '0');\n    const year = dateObj.getFullYear().toString().slice(-2);\n    const today = `${day}/${month}/${year}`\n    \n    let componentToRender \n\n\n    if (diaryCreated || diaryEntry[diaryEntry.length -1].date == today){\n        return <DiaryForm  diary={diaryEntry[diaryEntry.length -1]} handleUpdate={handleUpdate}/>\n    }\n\n\n    const submitForm = (event) => {\n        event.preventDefault();\n        const data = {\n                date: today\n          };\n        axios({\n          method: \"post\",\n          url: `http://localhost:8080/diaryentry`,\n          data\n        })\n          .then(res => {\n            setDiaryCreated(true)\n          })\n          .catch(err => {\n            console.log(err);\n          });\n    }\n\n    return (\n        <>\n                <div class=\"navbar\">\n                <ThumbUpOutline size={52}/>\n                </div>\n                <div class=\"navbar\">\n                <h1>Let's start the day right!</h1>\n                </div>\n\n\n        <div class=\"navbar\">\n        <form onSubmit={submitForm} >\n            <input type=\"text\" value={today} />\n            <button class=\"navbuttons\"type=\"submit\">Create New Diary Entry</button>\n            </form>  \n        </div>\n\n        {/* <div>\n        <audio class=\"audio-element\">\n          <source src=\"https://www.soundjay.com/nature/sounds/ocean-wave-1.mp3\"></source>\n        </audio>\n      </div>           */}\n        </>\n    )\n}\n\nexport default StartScreen;","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Loading.js",[],"/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/Sleep.js",["119"],"\nimport { useState } from 'react';\nimport { Slider, Typography } from '@material-ui/core';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport axios from 'axios';\nimport { MoonOutline } from \"heroicons-react\";\n\nconst Sleep = ({ diary, handleUpdate }) => {\n\n    const sliderTheme = createMuiTheme({\n        overrides: {\n            MuiSlider: {\n                thumb: {\n                    color: '#191170',\n                },\n                track: {\n                    color: 'white'\n                },\n                rail: {\n                    color: '#191170'\n                },\n                root: {\n                    width: 280,\n                },\n            }\n        }\n    })\n\n\n\n    const [sleep, setSleep] = useState(0)\n\n\n    const handleChange = (event, value) => {\n        setSleep(value);\n    };\n\n\n    const submitForm = (event) => {\n        event.preventDefault();\n        const data = {\n            hours: sleep\n        };\n        axios({\n            method: \"post\",\n            url: `http://localhost:8080/sleep`,\n            data\n        })\n            .then(\n                res => {\n                    handleUpdate(\"sleep\", res.data)\n                    // console.log(diary)        \n                    axios.put(`http://localhost:8080/diaryentry/${diary.id}`, diary,\n                        {\n                            headers: {\n                                Accept: 'application/json',\n                                'Content-Type': 'application/json',\n                                'Access-Control-Allow-Origin': '*',\n                            },\n                        })\n                        .then(\n                            res => console.log(\"PLEASE!\")\n                        )\n                }\n            )\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    return (\n        <>\n            <div class=\"slidercenter\">\n                <p>How many hours sleep did you get?</p>\n                <Typography id=\"discrete-slider\" gutterBottom>\n                    <MoonOutline />\n                </Typography>\n                <ThemeProvider theme={sliderTheme}>\n                    <Slider\n                        defaultValue={sleep}\n                        // getAriaValueText={valuetext}\n                        aria-labelledby=\"discrete-slider\"\n                        valueLabelDisplay=\"auto\"\n                        step={1}\n                        marks\n                        min={0}\n                        max={10}\n                        onChange={handleChange}\n                        color='#191170'\n                    />\n                </ThemeProvider>\n                <form onSubmit={submitForm} >\n                    <button class=\"navbuttons\" type=\"submit\">Submit Sleep</button>\n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default Sleep;","/Users/user/Desktop/codeclan_work/projects/codebreak/code-br-/code_br_client_side/src/components/Inputs/DiaryForm.js",["120"],"import ScreenTime from './Screentime';\nimport Sleep from './Sleep';\n\nconst DiaryForm = ({diary, handleUpdate}) => {\n\n\n    \n    return (\n        <>\n        <h1>Diary entry here</h1>\n        {/* <ScreenTime /> */}\n        <Sleep diary={diary} handleUpdate={(property, value)=>handleUpdate(property, value)}/>\n        </>\n        )\n}\n\nexport default DiaryForm;",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":2,"column":50,"nodeType":"127","messageId":"128","endLine":2,"endColumn":62},{"ruleId":"125","severity":1,"message":"129","line":27,"column":30,"nodeType":"127","messageId":"128","endLine":27,"endColumn":51},{"ruleId":"125","severity":1,"message":"130","line":46,"column":11,"nodeType":"127","messageId":"128","endLine":46,"endColumn":20},{"ruleId":"125","severity":1,"message":"131","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":15},{"ruleId":"125","severity":1,"message":"132","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":16},{"ruleId":"125","severity":1,"message":"133","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":12},{"ruleId":"125","severity":1,"message":"134","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":15},{"ruleId":"125","severity":1,"message":"135","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":36,"column":40,"nodeType":"138","endLine":36,"endColumn":42,"suggestions":"139"},{"ruleId":"125","severity":1,"message":"140","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":17},{"ruleId":"125","severity":1,"message":"141","line":1,"column":9,"nodeType":"127","messageId":"128","endLine":1,"endColumn":17},{"ruleId":"125","severity":1,"message":"142","line":1,"column":19,"nodeType":"127","messageId":"128","endLine":1,"endColumn":28},{"ruleId":"125","severity":1,"message":"143","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":9,"column":17,"nodeType":"146","endLine":10,"endColumn":127},{"ruleId":"144","severity":1,"message":"145","line":12,"column":17,"nodeType":"146","endLine":12,"endColumn":241},{"ruleId":"144","severity":1,"message":"145","line":15,"column":17,"nodeType":"146","endLine":15,"endColumn":241},{"ruleId":"144","severity":1,"message":"145","line":18,"column":17,"nodeType":"146","endLine":18,"endColumn":241},{"ruleId":"147","severity":1,"message":"148","line":13,"column":13,"nodeType":"146","endLine":13,"endColumn":27},{"ruleId":"125","severity":1,"message":"149","line":1,"column":9,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"150","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":15},{"ruleId":"125","severity":1,"message":"142","line":6,"column":20,"nodeType":"127","messageId":"128","endLine":6,"endColumn":29},{"ruleId":"125","severity":1,"message":"151","line":20,"column":9,"nodeType":"127","messageId":"128","endLine":20,"endColumn":26},{"ruleId":"152","severity":1,"message":"153","line":23,"column":63,"nodeType":"154","messageId":"155","endLine":23,"endColumn":65},{"ruleId":"125","severity":1,"message":"156","line":4,"column":26,"nodeType":"127","messageId":"128","endLine":4,"endColumn":36},{"ruleId":"125","severity":1,"message":"157","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":18},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'RefreshRoute' is defined but never used.","Identifier","unusedVar","'setselectedDiaryEntry' is assigned a value but never used.","'loadTimer' is assigned a value but never used.","'Breathe' is defined but never used.","'Meditate' is defined but never used.","'Yoga' is defined but never used.","'Inspire' is defined but never used.","'render' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRandomQuote'. Either include it or remove the dependency array.","ArrayExpression",["160"],"'Tooltip' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ReactPlayer' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Link' is defined but never used.","'Loading' is defined but never used.","'componentToRender' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'makeStyles' is defined but never used.","'ScreenTime' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},"Update the dependencies array to be: [getRandomQuote]",{"range":"163","text":"164"},[2431,2433],"[getRandomQuote]"]